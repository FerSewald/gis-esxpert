{"version":3,"sources":["AddCategory.js","helpers/GetGif.js","GifGriditem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setIInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAe,OAOf,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,EAArBJ,GAAsB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAa,IAAD,EAEVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAmBpC,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,aAChB,yBAAKA,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UESTkB,EAxBK,WAAO,IAAD,EAEc1C,mBAAS,CAAC,cAFxB,mBAEf2C,EAFe,KAEHC,EAFG,KAMtB,OAAQ,oCAEJ,4CACA,kBAAC,EAAD,CAAa7C,cAAe6C,IAC5B,6BAEA,4BAEQD,EAAWpB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,UChB1B+B,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.746e9bad.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setIInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        \r\n        setIInputValue(e.target.value)\r\n    }\r\n    const handelSubmit   = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setIInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handelSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=XGHEMtZL6ZDD97oWLKMcUD8pGjfo8z9x`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGriditem = ({id,  title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">loading..</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map(img =>(\r\n                    <GifGriditem \r\n                    key={img.id}\r\n                    {...img}/>\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGif\"\r\n\r\nexport const useFetchGifs= (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp =() => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setcategories}/>\r\n        <hr />\r\n\r\n        <ul>\r\n            {\r\n                categories.map(category =>\r\n                <GifGrid \r\n                key={category}\r\n                category={category} />\r\n                )\r\n            }\r\n        </ul> \r\n\r\n    </>)\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}